{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","countries","setCountries","useEffect","a","fetch","then","response","json","data","map","country","name","value","countryInfo","ios2","getCountriesData","className","FormControl","Select","veriant","MenuItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAmFeA,MA1Ef,WAAgB,IAAD,EACqBC,mBAAU,IAD/B,mBACNC,EADM,KACKC,EADL,KA6Bb,OArBIC,qBAAU,YAIkB,uCAAG,sBAAAC,EAAA,sEACjBC,MAAO,4CACZC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,IAAMR,EAAYQ,EAAKC,KAAK,SAACC,GAAD,MAAe,CAEvCC,KAAMD,EAAQA,QACdE,MAAOF,EAAQG,YAAYC,SAE/Bb,EAAaD,MATQ,2CAAH,qDAcpBe,KACL,IAGL,qBAAKC,UAAU,MAAf,SACQ,sBAAKA,UAAU,cAAf,UAEN,mDACA,cAACC,EAAA,EAAD,CAAaD,UAAU,gBAAvB,SACI,eAACE,EAAA,EAAD,CAAQC,QAAQ,WAAWP,MAAM,MAAjC,UAEM,cAACQ,EAAA,EAAD,CAAUR,MAAM,YAAhB,uBAEAZ,EAAUS,KAAI,SAAAC,GAAO,OACnB,cAACU,EAAA,EAAD,CAAUR,MAAOF,EAAQE,MAAzB,SAAkCF,EAAQC,qBCrC7CU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8ded18f0.chunk.js","sourcesContent":["import React, { useState , useEffect} from 'react';\nimport './App.css';\n\nimport { \n  Select ,\n  FormControl ,\n  MenuItem\n} from \"@material-ui/core\";\n\nfunction App() {\n  const [countries, setCountries] = useState ([]);\n\n          /// STATE = how to write a veriable in REACT <<<<\n    //// https://disease.sh/v3/covid-19/countries >>> API request link\n\n      /// USEEFFECT =   Run a piece of code base on a given conditions\n\n      useEffect(() => {\n            // The code inside here will run once , when the component loads not again \n            // async -> send a request , wait for it, do something with the info\n\n            const getCountriesData = async () => {\n              await fetch (\"https://disease.sh/v3/covid-19/countries\")\n              .then((response) => response.json())\n              .then((data) => {\n                const countries = data.map ((country) => ( /// map = Loop through with an list [item1, item2, item3 ] and returning an object in a shape\n                  {\n                    name: country.country, // united state , uinted kindgom , bangladesh\n                    value: country.countryInfo.ios2 // UK , USA, BD, FR, \n                  }));\n                setCountries(countries);\n\n              });\n            };\n              \n              getCountriesData();\n      }, []);\n\n  return (\n    <div className=\"app\">\n            <div className=\"app__header\">\n              \n      <h1>COVID 19 TRACKER1</h1>\n      <FormControl className=\"app__dropdown\" >\n          <Select veriant=\"outlined\" value=\"abc\" >\n                {/* Loop through all the countries and show a drop down list of the option  */}\n                <MenuItem value=\"worldwide\" >Worldwide</MenuItem>\n              {\n                countries.map(country => (\n                  <MenuItem value={country.value} >{country.name}</MenuItem>\n                ) )\n              }\n              \n              {/* <MenuItem value=\"worldwide\" >Worldwide</MenuItem>\n              <MenuItem value=\"worldwide\" >Worldwide2</MenuItem>\n              <MenuItem value=\"worldwide\" >Worldwide3</MenuItem>\n              <MenuItem value=\"worldwide\" >Worldwide4</MenuItem>\n              <MenuItem value=\"worldwide\" >Worldwide5</MenuItem> */}\n\n          </Select>\n\n      </FormControl>\n\n            </div>\n\n\n      {/* Header */ }\n       {/* title + select input dropdown feild  */ }\n\n        {/* info box */ }\n         {/* info box */ }\n          {/*info box  */ }\n\n           {/* Table */ }\n            {/* Graph */ }\n\n            {/* Map */ }\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}